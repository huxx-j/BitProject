<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="completion">

<!-- <select id="getValStudent" resultType="com.bitacademy.vo.UsersVo">

<![CDATA[
		select * from Users 
				 where curriculum.workType=WorkType,
				 	   curriculum.curriName=CurriName,
				 	   curriculum.state=State;
	]]>

</select> -->

<!-- 그리드에 반영될 데이터의 총 개수를 가져오기 -->
<select id="getRecords" parameterType="Int" resultType="Int">
	<![CDATA[
		select count(u.User_no) 
		from Users u, ApplyInfo a
		where u.User_no = a.User_no 
		and a.Curriculum_no = #{curriculum_no}
	]]>
</select>

<!-- 조회버튼 클릭 후 그리드영역 학생리스트 가져가기 -->
<select id="getCompletionStudent" parameterType="int" resultType="com.bitacademy.vo.ApplyUserVo">

	<choose>
     	<when test="sord=='asc'">
            <![CDATA[
               select u.User_no, c.GisuName,u.NameHan, substring(u.StudResNum,1,6) StudResNum,u.Gender,
			   a.TestResult,u.Cellphone,a.ApplyDate, a.TestDate,
			   s.School, s.Major,a.Deposit
	  
				from Users u, ApplyInfo a, UserScholarship s, Curriculum c,
					(select User_no, MAX(StartDate) as StartDate from UserScholarship
                     group by User_no) as us2          
                             
				where u.User_no = a.User_no
				and s.User_no = u.User_no 
				and a.Curriculum_no = c.Curriculum_no
				and s.User_no=us2.User_no
                and s.StartDate=us2.StartDate
				and c.Curriculum_no = #{param}  
				group by a.User_no
				order by ]]>
				<if test="!sidx.equals('sidx0')">
			            ${sidx} asc
			    </if>
             <![CDATA[ 
             		   u.NameHan asc
             		   limit #{startNum}, #{rows}
             ]]>
        </when>
   		<otherwise>
             <![CDATA[
                select u.User_no, c.GisuName,u.NameHan, substring(u.StudResNum,1,6) StudResNum,u.Gender,
				a.TestResult,u.Cellphone,a.ApplyDate, a.TestDate,
				s.School, s.Major,a.Deposit
	  
				from Users u, ApplyInfo a, UserScholarship s, Curriculum c,
					(select User_no, MAX(StartDate) as StartDate from UserScholarship
                     group by User_no) as us2 
                     
				where u.User_no = a.User_no
				and s.User_no = u.User_no 
				and a.Curriculum_no = c.Curriculum_no
				and s.User_no=us2.User_no
                and s.StartDate=us2.StartDate
				and c.Curriculum_no = #{param}
                group by a.User_no
                order by ${sidx} desc
                u.NameHan asc
                limit #{startNum}, #{rows}
              ]]>
        </otherwise>
     </choose>
</select>

<!-- 선택된 학생의 취업정보 가져가기 -->
<select id="getUserCareerList" parameterType="int" resultType="com.bitacademy.vo.UserCareerVo">

	<![CDATA[		
		select uc.CompName, 
		       uc.StartDate, 
		       uc.EndDate, 
		       uc.State,
		       uc.UserCareer_no, 
		       uc.User_no  
		from UserCareer uc
		where uc.User_no = #{user_no}
	]]>

</select>

<!-- 클릭된 취업내용 상세내역 가져가기 -->
<select id="getUserCareer" parameterType="map" resultType="com.bitacademy.vo.UserCareerVo">

	<![CDATA[
	            
		  select uc.CompName,uc.TelePhone,uc.StartDate,uc.UserCareer_no,
				 uc.EndDate,uc.Role,uc.Department,
				 uc.State,uc.CompanyAddress,u.User_no
		
		  from UserCareer uc,Users u
		  
		  where uc.User_no=u.User_no
		  and uc.UserCareer_no=#{userCareer_no}
		  and uc.User_no=#{user_no}
		
	]]>

</select>

<update id="afterServiceUpdate" parameterType="com.bitacademy.vo.UserCareerVo">
	 <choose>
	 <when test="startDate.equals('')">
		<![CDATA[

				update UserCareer
				set CompName=#{compName},
					EndDate=#{endDate},
					Role=#{role},
					TelePhone=#{telePhone},
					State=#{state},
					CompanyAddress=#{companyAddress},
					Department=#{department}
				where User_no=#{user_no}
				and UserCareer_no=#{userCareer_no}
		]]>
	</when>
	<when test="endDate.equals('')">
		<![CDATA[

				update UserCareer
				set CompName=#{compName},
					StartDate=#{startDate},
					Role=#{role},
					TelePhone=#{telePhone},
					State=#{state},
					CompanyAddress=#{companyAddress},
					Department=#{department}
				where User_no=#{user_no}
				and UserCareer_no=#{userCareer_no}
		]]>
	</when>
	<otherwise>
		<![CDATA[

				update UserCareer
				set CompName=#{compName},
					StartDate=#{startDate},
					EndDate=#{endDate},
					Role=#{role},
					TelePhone=#{telePhone},
					State=#{state},
					CompanyAddress=#{companyAddress},
					Department=#{department}
				where User_no=#{user_no}
				and UserCareer_no=#{userCareer_no}
		]]>
	</otherwise>
	</choose>
</update><!-- 수정버튼 클릭 후 취업상세내용 업데이트하기 -->

<insert id="afterServiceAdd" parameterType="com.bitacademy.vo.UserCareerVo">
	<choose>
	<when test="startDate.equals('')">
		<![CDATA[
		insert into UserCareer(User_no,EndDate,CompName,Role,TelePhone,CompanyAddress,State,Department)
		values(	#{user_no},
				#{endDate},
				#{compName},
				#{role},
				#{telePhone},
				#{companyAddress},
				#{state},
				#{department}
				)
		]]>
	</when>
	<when test="endDate.equals('')">
		<![CDATA[
		insert into UserCareer(User_no,StartDate,CompName,Role,TelePhone,CompanyAddress,State,Department)
		values(	#{user_no},
				#{startDate},
				#{compName},
				#{role},
				#{telePhone},
				#{companyAddress},
				#{state},
				#{department}
				)
		]]>
	</when>
	<otherwise>
		<![CDATA[
		insert into UserCareer(User_no,StartDate,EndDate,CompName,Role,TelePhone,CompanyAddress,State,Department)
		values(	#{user_no},
				#{startDate},
				#{endDate},
				#{compName},
				#{role},
				#{telePhone},
				#{companyAddress},
				#{state},
				#{department}
				)
	]]>

	</otherwise>
	</choose>
</insert><!-- 저장 버튼 클릭 후 취업내용 추가하기 -->

</mapper>